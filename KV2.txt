КВ_1. Из каких сегментов состоит структура памяти процесса?

1) Stack (лок. данные)
2) Heap (динамич. данные)
3) Data (сегмент инициализированных данных)
4) bss (неинициализированный сегмент данных)
5) code (сам код)


КВ_2. Каким образом связаны встроенные указатели и массивы?

Массив представляет из себя указатель на первый элемент в нём, тип данных и количество элементов(если не динамический).


КВ_3. Почему низкоуровневая работа с памятью небезопасна?

Появляются проблемы при нескольких работающих одновременно процессах. Для того, чтобы один процесс не смог случайно 
или специально несогласованно использовать память другого процесса или исполнить привилегированную инструкцию, 
которая может повлиять на работу ОС и других процессов. 

КВ_4. Когда нужно использовать оператор delete [] вместо delete? Какие последствия 
могут произойти, если забыть написать [] в этом операторе?

Оператор delete освобождает память и вызывает деструктор для одного объекта, созданного с помощью new.
Оператор delete [] освобождает память и вызывает деструкторы для массива объектов, созданных с помощью new [].
Использование delete для указателя, возвращаемого новым [], или delete [] для указателя, возвращаемого новым, приводит к неопределенному поведению.

КВ_5. Что нужно помнить при выделении и освобождении памяти для многомерных
динамических массивов?

Многомерный динамический массив реализуется как одномерный массив указателей. 
При работе с функциями применяются те же подходы, что и для одномерного массива с точностью до типов данных.



